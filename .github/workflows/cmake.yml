name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: cmake-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  BUILD_TYPE: Debug
  CC: clang
  CXX: clang++

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        include:
        - os: macos-latest
          deps: brew install ninja
        - os: ubuntu-latest
          deps: sudo apt-get install -y ninja-build


    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/cmake-build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      run: ${{ matrix.deps}}

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
        -G Ninja
        -S ${{ github.workspace }}

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ env.BUILD_TYPE }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ninja check
