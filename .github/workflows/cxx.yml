name: C++

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  group: cxx-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
  build-cmake:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        build-type:
          - Debug
          - RelWithDebInfo
        use-mold:
          - false
          - true
        exclude:
          - os: macos-latest
            use-mold: true
        include:
          - os: macos-latest
            deps: brew install ninja icu4c@74
            cmake-flags: -DICU_INCLUDE_PATH=/opt/homebrew/opt/icu4c@74/include -DDISABLE_JIT=ON
          - os: ubuntu-latest
            deps: sudo apt-get install -y ninja-build
            cmake-flags: ''

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/chakracore-cxx/cmake-build" >> "$GITHUB_OUTPUT"

      - name: Install dependencies
        run: ${{ matrix.deps }}

      - name: Install mold linker
        if: matrix.use-mold
        uses: rui314/setup-mold@v1

      - name: Create build directory
        run: mkdir -p ${{ steps.strings.outputs.build-output-dir }}

      - name: Configure CMake
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} ${{ matrix.cmake-flags }} -GNinja -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang ..

      - name: Build
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ninja

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ninja check

      - name: Slow Tests
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ninja slow-check

  build-msvc:
    runs-on: windows-latest
    timeout-minutes: 120

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        build-type:
          - debug
          - test

    steps:
      - uses: actions/checkout@v4

      - name: Build
        working-directory: ${{ github.workspace }}/chakracore-cxx
        run: test\ci.buildone.cmd x64 ${{ matrix.build-type }}

      - name: Test
        working-directory: ${{ github.workspace }}/chakracore-cxx
        run: test\ci.testone.cmd x64 ${{ matrix.build-type }}

      - name: Slow Tests
        working-directory: ${{ github.workspace }}/chakracore-cxx
        run: test\ci.testone.cmd x64 ${{ matrix.build-type }} --only-slow
