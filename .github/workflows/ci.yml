name: ci

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  # allow concurrent jobs on master, but not on PRs
  group: ${{ github.workflow }}-${{ (github.ref == 'refs/heads/master' && github.sha) || github.ref }}
  cancel-in-progress: true

jobs:
  build-rust:
    name: rust / ${{ matrix.os }} / ${{ matrix.build-type }}
    runs-on: ${{ matrix.os-image }}
    strategy:
      # TODO: don't fail fast
      fail-fast: true
      matrix:
        os:
          - macos
          - ubuntu
        build-type:
          - debug
          - test
        include:
          - os: macos
            os-image: macos-latest
            deps: brew install ninja icu4c --quiet
          - os: ubuntu
            os-image: ubuntu-latest
            deps: sudo apt-get install -y ninja-build libc++-dev libc++abi-dev
          - build-type: debug
            features: compile-cpp
          - build-type: test
            features: compile-cpp,optimized-tests
    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        run: ${{ matrix.deps }}
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: Build
        run: cargo build --features ${{ matrix.features }} --all-targets
      # TODO: don't fail fast
      - name: Run tests
        run: cargo nextest run --features ${{ matrix.features }}
      # TODO: don't fail fast
      - name: Run slow tests
        run: cargo nextest run --features ${{ matrix.features }} -- --ignored
        env:
          CHAKRA_TEST_SLOW: true

  build-cmake:
    name: cmake / ${{ matrix.os }} / ${{ matrix.build-type }}
    runs-on: ${{ matrix.os-image }}
    timeout-minutes: 120
    strategy:
      # TODO: don't fail fast
      fail-fast: false
      matrix:
        os:
          - macos
          - ubuntu
        build-type:
          - debug
          - test
        include:
          - os: macos
            os-image: macos-latest
            deps: brew install ninja icu4c --quiet
          - os: ubuntu
            os-image: ubuntu-latest
            deps: sudo apt-get install -y ninja-build libc++-dev libc++abi-dev
            cmake-preset-prefix: linux
    env:
      CXX: clang++
      CC: clang
    steps:
      - uses: actions/checkout@v5
      - name: Install dependencies
        run: ${{ matrix.deps }}
      - name: Configure CMake
        # TODO: re-enable warning as error
        run: cmake --preset ${{ matrix.cmake-preset-prefix || matrix.os }}-${{ matrix.build-type }} -DCMAKE_COMPILE_WARNING_AS_ERROR=OFF
      - name: Build
        run: cmake --build build
