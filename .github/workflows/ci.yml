name: ci

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

concurrency:
  # allow concurrent jobs on master, but not on PRs
  group: ${{ github.workflow }}-${{ (github.ref == 'refs/heads/master' && github.sha) || github.ref }}
  cancel-in-progress: true

jobs:
  build-rust:
    name: rust / ${{ matrix.os }} / ${{ matrix.build-type }}
    runs-on: ${{ matrix.os-image }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos
          - ubuntu
          - windows
        build-type:
          - debug
          - test
        include:
          - os: macos
            os-image: macos-latest
            deps: brew install ninja icu4c --quiet
          - os: ubuntu
            os-image: ubuntu-latest
            deps: sudo apt-get install -y ninja-build
          - os: windows
            os-image: windows-latest
          - build-type: debug
            features: compile-cpp
          - build-type: test
            features: compile-cpp,optimized-tests
    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install dependencies
        if: runner.os != 'Windows'
        run: ${{ matrix.deps }}
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: Add msbuild to PATH
        if: runner.os == 'Windows'
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64
      - name: Set timezone
        if: runner.os == 'Windows'
        run: tzutil /s "Pacific Standard time"
      - name: Build
        run: cargo build --features ${{ matrix.features }} --all-targets
      - name: Run tests
        run: cargo nextest run --no-fail-fast --features ${{ matrix.features }}
      - name: Run slow tests
        run: cargo nextest run --no-fail-fast --features ${{ matrix.features }} -- --ignored
        env:
          CHAKRA_TEST_SLOW: true

  build-cmake:
    name: c++ / ${{ matrix.os }} / ${{ matrix.build-type }}
    runs-on: ${{ matrix.os-image }}
    timeout-minutes: 120
    defaults:
      run:
        working-directory: ${{ github.workspace }}/chakracore-cxx/cmake-build
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos
          - ubuntu
        build-type:
          - debug
          - test
        include:
          - os: macos
            os-image: macos-latest
            deps: brew install ninja icu4c --quiet
            cmake-flags: -DICU_INCLUDE_PATH=/opt/homebrew/opt/icu4c/include -DDISABLE_JIT=ON
          - os: ubuntu
            os-image: ubuntu-latest
            deps: sudo apt-get install -y ninja-build
          - build-type: debug
            cmake-build-type: Debug
          - build-type: test
            cmake-build-type: RelWithDebInfo
    env:
      CXX: clang++
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - name: Create build directory
        working-directory: ${{ github.workspace }}/chakracore-cxx
        run: mkdir -p cmake-build
      - name: Install dependencies
        run: ${{ matrix.deps }}
      - name: Configure CMake
        run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.cmake-build-type }} ${{ matrix.cmake-flags }} -GNinja ..
      - name: Build
        run: ninja

  build-msvc:
    runs-on: windows-latest
    timeout-minutes: 120
    defaults:
      run:
        working-directory: ${{ github.workspace }}/chakracore-cxx
    strategy:
      fail-fast: false
      matrix:
        build-type:
          - debug
          - test
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: test\ci.buildone.cmd x64 ${{ matrix.build-type }}
